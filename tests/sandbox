#!/usr/bin/env sh

name="$1"

scratch="$(mktemp --tmpdir --directory "memoize-test-cli_${name}.XXXXXXXX")"
mkdir "${scratch}/sandbox"
mkdir "${scratch}/cache"
mkdir "${scratch}/files"

log() {
	>&2 echo "$@"
}

ensure_ends_with_newline() {
	if [ -n "$(tail -c1 "$1")" ] ; then
		echo >> "$1"
	fi
}

log "> Running sandbox ${scratch}/sandbox"
cd "${scratch}/sandbox" || exit 2

eval_last_cmd() {
	if [ -n "$cmd" ] ; then
		eval "$cmd" 1>"${scratch}/files/${cmdno}-stdout-got" 2>"${scratch}/files/${cmdno}-stderr-got"
		rc="$?"
		ensure_ends_with_newline "${scratch}/files/${cmdno}-stdout-got"
		ensure_ends_with_newline "${scratch}/files/${cmdno}-stderr-got"
		diff "${scratch}/files/${cmdno}-stdout-expected" "${scratch}/files/${cmdno}-stdout-got" || exit 1
		diff "${scratch}/files/${cmdno}-stderr-expected" "${scratch}/files/${cmdno}-stderr-got" || exit 1
		if [ "$ret" = "FAIL" ] ; then
			if test "$rc" -eq 0 ; then
				log 'Command succeeded but was expected to fail.'
				exit 1
			fi
		else
			if test "$rc" -ne "$ret" ; then
				log "Command exited with ${rc} but was expected to exit with ${ret}."
				exit 1
			fi
		fi
	fi
}

export MEMOIZE_CACHE="${scratch}/cache"
lineno=0
while IFS= read -r line; do
	lineno=$((lineno+1))

	case "$line" in
		\$*)
			eval_last_cmd
			cmdno="$lineno"
			ret="$(printf "%s\n" "$line" | sed 's/.* --> \(.*\)/\1/g')"
			if [ "$ret" != "$line" ] ; then
				cmd="$(printf "%s\n" "$line" | sed 's/\$ \(.*\) --> .*/\1/g')"
			else
				ret=0
				cmd="$(printf "%s\n" "$line" | sed 's/\$ \(.*\)/\1/g')"
			fi
			touch "${scratch}/files/${cmdno}-stdout-expected"
			touch "${scratch}/files/${cmdno}-stderr-expected"
			;;
		\#*)
			# Ignore comments.
			;;
		\>\&2*)
			stderr="$(printf "%s\n" "$line" | sed 's/>&2 \(.*\)/\1/g')"
			printf "%s\n" "$stderr" >> "${scratch}/files/${cmdno}-stderr-expected"
			;;
		\>\&1*)
			stdout="$(printf "%s\n" "$line" | sed 's/>&1 \(.*\)/\1/g')"
			printf "%s\n" "$stdout" >> "${scratch}/files/${cmdno}-stdout-expected"
			;;
		*)
			printf "%s\n" "$line" >> "${scratch}/files/${cmdno}-stdout-expected"
			;;
	esac

	printf "%s\n" "$line"

done

eval_last_cmd

log "> Exiting sandbox ${scratch}/sandbox"
cd "$OLDPWD" || exit 2
rm -rf "$scratch"
